name: Terraform Deploy

on:
  repository_dispatch:
    types: [bootstrap_completed]

jobs:
  terraform:
    runs-on: [self-hosted, linux, x64]

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - name: Verify Project Directory
        run: |
          echo "📂 Verifying project directory: ${{ github.event.client_payload.repo_path }}"
          ls -la ${{ github.event.client_payload.repo_path }}
          echo "✅ Project directory verified"

      - name: Verify AWS Credentials
        run: |
          echo "🔍 Verifying AWS credentials..."
          aws sts get-caller-identity
          echo "✅ AWS credentials validated"

      - name: Initialize Terraform Backend
        run: |
          echo "🚀 Initializing Terraform backend..."
          cd ${{ github.event.client_payload.repo_path }}

          # Check backend and variable files
          if [ ! -f "backend-config/${{ github.event.client_payload.environment }}.tfbackend" ]; then
            echo "❌ Missing backend config: backend-config/${{ github.event.client_payload.environment }}.tfbackend"
            exit 1
          fi

          if [ ! -f "static.tfvars" ]; then
            echo "❌ Missing static vars file: static.tfvars"
            exit 1
          fi

          if [ ! -f "envs/${{ github.event.client_payload.environment }}.tfvars" ]; then
            echo "❌ Missing environment vars file: envs/${{ github.event.client_payload.environment }}.tfvars"
            exit 1
          fi

          terraform init -backend-config="backend-config/${{ github.event.client_payload.environment }}.tfbackend"
          terraform workspace select ${{ github.event.client_payload.environment }} || terraform workspace new ${{ github.event.client_payload.environment }}
          echo "✅ Terraform initialized successfully."
        working-directory: ${{ github.event.client_payload.repo_path }}

      - name: Terraform Validate
        run: |
          terraform validate
        working-directory: ${{ github.event.client_payload.repo_path }}

      - name: Terraform Plan
        run: |
          echo "📋 Running Terraform plan..."
          terraform plan \
            -var-file="static.tfvars" \
            -var-file="envs/${{ github.event.client_payload.environment }}.tfvars" \
            -out=tfplan.out
          echo "✅ Terraform plan completed successfully."
        working-directory: ${{ github.event.client_payload.repo_path }}

      - name: Terraform Apply
        run: |
          echo "🚀 Applying Terraform changes..."
          export TF_LOG=INFO
          terraform apply -auto-approve tfplan.out
          echo "✅ Terraform apply completed successfully!"
        working-directory: ${{ github.event.client_payload.repo_path }}
        timeout-minutes: 120

      - name: Output EKS Cluster Info
        run: |
          echo "🎉 EKS Cluster deployment completed!"
          terraform output
        working-directory: ${{ github.event.client_payload.repo_path }}

      - name: Deployment Summary
        run: |
          echo "## 🎉 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.client_payload.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region:** ${{ secrets.AWS_DEFAULT_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Workspace:** ${{ github.event.client_payload.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ✅ Successfully deployed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Terraform Outputs" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          terraform output >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        working-directory: ${{ github.event.client_payload.repo_path }}
